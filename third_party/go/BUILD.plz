config_setting(
    name = "__config_linux_amd64",
    values = {
        "os": "linux",
        "cpu": "amd64",
    },
)

config_setting(
    name = "__config_darwin_amd64",
    values = {
        "os": "darwin",
        "cpu": "amd64",
    },
)

config_setting(
    name = "__config_linux_arm64",
    values = {
        "os": "linux",
        "cpu": "arm64",
    },
)

config_setting(
    name = "__config_darwin_arm64",
    values = {
        "os": "darwin",
        "cpu": "arm64",
    },
)

go_mod_download(
    name = "buf.build__gen__go__bufbuild__protovalidate__protocolbuffers__go",
    _tag = "download",
    module = "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go",
    version = "v1.36.9-20250912141014-52f32327d4b0.1",
    visibility = ["PUBLIC"],
)

go_module(
    name = "buf.build__gen__go__bufbuild__protovalidate__protocolbuffers__go__buf__validate",
    download = ":_buf.build__gen__go__bufbuild__protovalidate__protocolbuffers__go#download",
    install = ["buf/validate"],
    module = "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__descriptorpb",
        ":google.golang.org__protobuf__types__known__durationpb",
        ":google.golang.org__protobuf__types__known__timestamppb",
    ],
)

go_mod_download(
    name = "buf.build__go__protovalidate",
    _tag = "download",
    module = "buf.build/go/protovalidate",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "buf.build__go__protovalidate",
    download = ":_buf.build__go__protovalidate#download",
    install = ["."],
    module = "buf.build/go/protovalidate",
    visibility = ["PUBLIC"],
    deps = [
        ":buf.build__gen__go__bufbuild__protovalidate__protocolbuffers__go__buf__validate",
        ":buf.build__go__protovalidate__cel",
        ":github.com__google__cel-go__cel",
        ":github.com__google__cel-go__interpreter",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__types__descriptorpb",
        ":google.golang.org__protobuf__types__dynamicpb",
        ":google.golang.org__protobuf__types__known__timestamppb",
    ],
)

go_module(
    name = "buf.build__go__protovalidate__cel",
    download = ":_buf.build__go__protovalidate#download",
    install = ["cel"],
    module = "buf.build/go/protovalidate",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__cel-go__cel",
        ":github.com__google__cel-go__common__overloads",
        ":github.com__google__cel-go__common__types",
        ":github.com__google__cel-go__common__types__ref",
        ":github.com__google__cel-go__common__types__traits",
        ":github.com__google__cel-go__ext",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__types__dynamicpb",
    ],
)

go_mod_download(
    name = "cel.dev__expr",
    _tag = "download",
    module = "cel.dev/expr",
    version = "v0.24.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "cel.dev__expr",
    download = ":_cel.dev__expr#download",
    install = ["."],
    module = "cel.dev/expr",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__anypb",
        ":google.golang.org__protobuf__types__known__durationpb",
        ":google.golang.org__protobuf__types__known__emptypb",
        ":google.golang.org__protobuf__types__known__structpb",
        ":google.golang.org__protobuf__types__known__timestamppb",
    ],
)

go_mod_download(
    name = "dario.cat__mergo",
    _tag = "download",
    module = "dario.cat/mergo",
    version = "v1.0.1",
    visibility = ["PUBLIC"],
)

go_module(
    name = "dario.cat__mergo",
    download = ":_dario.cat__mergo#download",
    install = ["."],
    module = "dario.cat/mergo",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__Masterminds__goutils",
    _tag = "download",
    module = "github.com/Masterminds/goutils",
    version = "v1.1.1",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__Masterminds__goutils",
    download = ":_github.com__Masterminds__goutils#download",
    install = ["."],
    module = "github.com/Masterminds/goutils",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__Masterminds__semver__v3",
    _tag = "download",
    module = "github.com/Masterminds/semver/v3",
    version = "v3.3.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__Masterminds__semver__v3",
    download = ":_github.com__Masterminds__semver__v3#download",
    install = ["."],
    module = "github.com/Masterminds/semver/v3",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__Masterminds__sprig__v3",
    _tag = "download",
    module = "github.com/Masterminds/sprig/v3",
    version = "v3.3.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__Masterminds__sprig__v3",
    download = ":_github.com__Masterminds__sprig__v3#download",
    install = ["."],
    module = "github.com/Masterminds/sprig/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":dario.cat__mergo",
        ":github.com__Masterminds__goutils",
        ":github.com__Masterminds__semver__v3",
        ":github.com__google__uuid",
        ":github.com__huandu__xstrings",
        ":github.com__mitchellh__copystructure",
        ":github.com__shopspring__decimal",
        ":github.com__spf13__cast",
        ":golang.org__x__crypto__bcrypt",
        ":golang.org__x__crypto__scrypt",
    ],
)

go_mod_download(
    name = "github.com__NathanBaulch__protoc-gen-cobra",
    _tag = "download",
    module = "github.com/NathanBaulch/protoc-gen-cobra",
    patch = ["protoc-gen-cobra.patch"],
    version = "v1.2.1",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__NathanBaulch__protoc-gen-cobra",
    download = ":_github.com__NathanBaulch__protoc-gen-cobra#download",
    install = ["."],
    module = "github.com/NathanBaulch/protoc-gen-cobra",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__compiler__protogen",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__types__descriptorpb",
        ":google.golang.org__protobuf__types__pluginpb",
    ],
)

go_module(
    name = "github.com__NathanBaulch__protoc-gen-cobra__client",
    download = ":_github.com__NathanBaulch__protoc-gen-cobra#download",
    install = ["client"],
    module = "github.com/NathanBaulch/protoc-gen-cobra",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__NathanBaulch__protoc-gen-cobra__iocodec",
        ":github.com__NathanBaulch__protoc-gen-cobra__naming",
        ":github.com__spf13__pflag",
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__credentials__insecure",
    ],
)

go_module(
    name = "github.com__NathanBaulch__protoc-gen-cobra__flag",
    download = ":_github.com__NathanBaulch__protoc-gen-cobra#download",
    install = ["flag"],
    module = "github.com/NathanBaulch/protoc-gen-cobra",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__NathanBaulch__protoc-gen-cobra__naming",
        ":github.com__NathanBaulch__protoc-gen-cobra__ptypes",
        ":github.com__spf13__pflag",
        ":google.golang.org__protobuf__encoding__protojson",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__types__known__durationpb",
        ":google.golang.org__protobuf__types__known__timestamppb",
        ":google.golang.org__protobuf__types__known__wrapperspb",
    ],
)

go_module(
    name = "github.com__NathanBaulch__protoc-gen-cobra__iocodec",
    download = ":_github.com__NathanBaulch__protoc-gen-cobra#download",
    install = ["iocodec"],
    module = "github.com/NathanBaulch/protoc-gen-cobra",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__NathanBaulch__protoc-gen-cobra__ptypes",
        ":github.com__mitchellh__mapstructure",
        ":google.golang.org__protobuf__encoding__protojson",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__types__known__durationpb",
        ":google.golang.org__protobuf__types__known__timestamppb",
        ":google.golang.org__protobuf__types__known__wrapperspb",
    ],
)

go_module(
    name = "github.com__NathanBaulch__protoc-gen-cobra__naming",
    download = ":_github.com__NathanBaulch__protoc-gen-cobra#download",
    install = ["naming"],
    module = "github.com/NathanBaulch/protoc-gen-cobra",
    visibility = ["PUBLIC"],
    deps = [":github.com__iancoleman__strcase"],
)

go_module(
    name = "github.com__NathanBaulch__protoc-gen-cobra__ptypes",
    download = ":_github.com__NathanBaulch__protoc-gen-cobra#download",
    install = ["ptypes"],
    module = "github.com/NathanBaulch/protoc-gen-cobra",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__spf13__cast",
        ":google.golang.org__protobuf__types__known__durationpb",
        ":google.golang.org__protobuf__types__known__timestamppb",
        ":google.golang.org__protobuf__types__known__wrapperspb",
    ],
)

go_mod_download(
    name = "github.com__antlr4-go__antlr__v4",
    _tag = "download",
    module = "github.com/antlr4-go/antlr/v4",
    version = "v4.13.1",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__antlr4-go__antlr__v4",
    download = ":_github.com__antlr4-go__antlr__v4#download",
    install = ["."],
    module = "github.com/antlr4-go/antlr/v4",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__exp__slices"],
)

go_mod_download(
    name = "github.com__bazelbuild__buildtools",
    _tag = "download",
    module = "github.com/bazelbuild/buildtools",
    version = "v0.0.0-20250930140053-2eb4fccefb52",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__bazelbuild__buildtools__build",
    download = ":_github.com__bazelbuild__buildtools#download",
    install = ["build"],
    module = "github.com/bazelbuild/buildtools",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__bazelbuild__buildtools__labels",
        ":github.com__bazelbuild__buildtools__tables",
    ],
)

go_module(
    name = "github.com__bazelbuild__buildtools__labels",
    download = ":_github.com__bazelbuild__buildtools#download",
    install = ["labels"],
    module = "github.com/bazelbuild/buildtools",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__bazelbuild__buildtools__tables",
    download = ":_github.com__bazelbuild__buildtools#download",
    install = ["tables"],
    module = "github.com/bazelbuild/buildtools",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__beorn7__perks",
    _tag = "download",
    module = "github.com/beorn7/perks",
    version = "v1.0.1",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__beorn7__perks__quantile",
    download = ":_github.com__beorn7__perks#download",
    install = ["quantile"],
    module = "github.com/beorn7/perks",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__cenkalti__backoff__v4",
    _tag = "download",
    module = "github.com/cenkalti/backoff/v4",
    version = "v4.3.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__cenkalti__backoff__v4",
    download = ":_github.com__cenkalti__backoff__v4#download",
    install = ["."],
    module = "github.com/cenkalti/backoff/v4",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__cespare__xxhash__v2",
    _tag = "download",
    module = "github.com/cespare/xxhash/v2",
    version = "v2.3.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__cespare__xxhash__v2",
    download = ":_github.com__cespare__xxhash__v2#download",
    install = ["."],
    module = "github.com/cespare/xxhash/v2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__davecgh__go-spew",
    _tag = "download",
    module = "github.com/davecgh/go-spew",
    version = "v1.1.1",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__davecgh__go-spew__spew",
    download = ":_github.com__davecgh__go-spew#download",
    install = ["spew"],
    module = "github.com/davecgh/go-spew",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__fsnotify__fsnotify",
    _tag = "download",
    module = "github.com/fsnotify/fsnotify",
    version = "v1.6.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__fsnotify__fsnotify",
    download = ":_github.com__fsnotify__fsnotify#download",
    install = ["."],
    module = "github.com/fsnotify/fsnotify",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__sys__unix"],
)

go_mod_download(
    name = "github.com__go-jose__go-jose__v4",
    _tag = "download",
    module = "github.com/go-jose/go-jose/v4",
    version = "v4.0.5",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__go-jose__go-jose__v4",
    download = ":_github.com__go-jose__go-jose__v4#download",
    install = ["."],
    module = "github.com/go-jose/go-jose/v4",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-jose__go-jose__v4__cipher",
        ":github.com__go-jose__go-jose__v4__json",
        ":golang.org__x__crypto__pbkdf2",
    ],
)

go_module(
    name = "github.com__go-jose__go-jose__v4__cipher",
    download = ":_github.com__go-jose__go-jose__v4#download",
    install = ["cipher"],
    module = "github.com/go-jose/go-jose/v4",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__go-jose__go-jose__v4__json",
    download = ":_github.com__go-jose__go-jose__v4#download",
    install = ["json"],
    module = "github.com/go-jose/go-jose/v4",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__go-jose__go-jose__v4__jwt",
    download = ":_github.com__go-jose__go-jose__v4#download",
    install = ["jwt"],
    module = "github.com/go-jose/go-jose/v4",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-jose__go-jose__v4",
        ":github.com__go-jose__go-jose__v4__json",
    ],
)

go_mod_download(
    name = "github.com__golang__glog",
    _tag = "download",
    module = "github.com/golang/glog",
    version = "v1.2.4",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__golang__glog",
    download = ":_github.com__golang__glog#download",
    install = ["."],
    module = "github.com/golang/glog",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__glog__internal__logsink",
        ":github.com__golang__glog__internal__stackdump",
    ],
)

go_module(
    name = "github.com__golang__glog__internal__logsink",
    download = ":_github.com__golang__glog#download",
    install = ["internal/logsink"],
    module = "github.com/golang/glog",
    visibility = ["PUBLIC"],
    deps = [":github.com__golang__glog__internal__stackdump"],
)

go_module(
    name = "github.com__golang__glog__internal__stackdump",
    download = ":_github.com__golang__glog#download",
    install = ["internal/stackdump"],
    module = "github.com/golang/glog",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__golang__protobuf",
    _tag = "download",
    module = "github.com/golang/protobuf",
    version = "v1.5.4",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__golang__protobuf__proto",
    download = ":_github.com__golang__protobuf#download",
    install = ["proto"],
    module = "github.com/golang/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__prototext",
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protodesc",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__runtime__protoiface",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "github.com__golang__protobuf__ptypes",
    download = ":_github.com__golang__protobuf#download",
    install = ["ptypes"],
    module = "github.com/golang/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":github.com__golang__protobuf__ptypes__any",
        ":github.com__golang__protobuf__ptypes__duration",
        ":github.com__golang__protobuf__ptypes__timestamp",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "github.com__golang__protobuf__ptypes__any",
    download = ":_github.com__golang__protobuf#download",
    install = ["ptypes/any"],
    module = "github.com/golang/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__anypb",
    ],
)

go_module(
    name = "github.com__golang__protobuf__ptypes__duration",
    download = ":_github.com__golang__protobuf#download",
    install = ["ptypes/duration"],
    module = "github.com/golang/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__durationpb",
    ],
)

go_module(
    name = "github.com__golang__protobuf__ptypes__timestamp",
    download = ":_github.com__golang__protobuf#download",
    install = ["ptypes/timestamp"],
    module = "github.com/golang/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__timestamppb",
    ],
)

go_mod_download(
    name = "github.com__google__cel-go",
    _tag = "download",
    module = "github.com/google/cel-go",
    version = "v0.26.1",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__google__cel-go__cel",
    download = ":_github.com__google__cel-go#download",
    install = ["cel"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [
        ":cel.dev__expr",
        ":github.com__google__cel-go__checker",
        ":github.com__google__cel-go__checker__decls",
        ":github.com__google__cel-go__common",
        ":github.com__google__cel-go__common__ast",
        ":github.com__google__cel-go__common__containers",
        ":github.com__google__cel-go__common__decls",
        ":github.com__google__cel-go__common__env",
        ":github.com__google__cel-go__common__functions",
        ":github.com__google__cel-go__common__operators",
        ":github.com__google__cel-go__common__overloads",
        ":github.com__google__cel-go__common__stdlib",
        ":github.com__google__cel-go__common__types",
        ":github.com__google__cel-go__common__types__pb",
        ":github.com__google__cel-go__common__types__ref",
        ":github.com__google__cel-go__common__types__traits",
        ":github.com__google__cel-go__interpreter",
        ":github.com__google__cel-go__parser",
        ":google.golang.org__genproto__googleapis__api__expr__v1alpha1",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protodesc",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__types__descriptorpb",
        ":google.golang.org__protobuf__types__dynamicpb",
        ":google.golang.org__protobuf__types__known__anypb",
    ],
)

go_module(
    name = "github.com__google__cel-go__checker",
    download = ":_github.com__google__cel-go#download",
    install = ["checker"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__cel-go__checker__decls",
        ":github.com__google__cel-go__common",
        ":github.com__google__cel-go__common__ast",
        ":github.com__google__cel-go__common__containers",
        ":github.com__google__cel-go__common__debug",
        ":github.com__google__cel-go__common__decls",
        ":github.com__google__cel-go__common__operators",
        ":github.com__google__cel-go__common__overloads",
        ":github.com__google__cel-go__common__types",
        ":github.com__google__cel-go__common__types__ref",
        ":github.com__google__cel-go__parser",
        ":google.golang.org__genproto__googleapis__api__expr__v1alpha1",
    ],
)

go_module(
    name = "github.com__google__cel-go__checker__decls",
    download = ":_github.com__google__cel-go#download",
    install = ["checker/decls"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__genproto__googleapis__api__expr__v1alpha1",
        ":google.golang.org__protobuf__types__known__emptypb",
        ":google.golang.org__protobuf__types__known__structpb",
    ],
)

go_module(
    name = "github.com__google__cel-go__common",
    download = ":_github.com__google__cel-go#download",
    install = ["common"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__cel-go__common__runes",
        ":google.golang.org__genproto__googleapis__api__expr__v1alpha1",
    ],
)

go_module(
    name = "github.com__google__cel-go__common__ast",
    download = ":_github.com__google__cel-go#download",
    install = ["common/ast"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [
        ":cel.dev__expr",
        ":github.com__google__cel-go__common",
        ":github.com__google__cel-go__common__types",
        ":github.com__google__cel-go__common__types__ref",
        ":google.golang.org__genproto__googleapis__api__expr__v1alpha1",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__types__known__structpb",
    ],
)

go_module(
    name = "github.com__google__cel-go__common__containers",
    download = ":_github.com__google__cel-go#download",
    install = ["common/containers"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [":github.com__google__cel-go__common__ast"],
)

go_module(
    name = "github.com__google__cel-go__common__debug",
    download = ":_github.com__google__cel-go#download",
    install = ["common/debug"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__cel-go__common__ast",
        ":github.com__google__cel-go__common__types",
        ":github.com__google__cel-go__common__types__ref",
    ],
)

go_module(
    name = "github.com__google__cel-go__common__decls",
    download = ":_github.com__google__cel-go#download",
    install = ["common/decls"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__cel-go__checker__decls",
        ":github.com__google__cel-go__common",
        ":github.com__google__cel-go__common__functions",
        ":github.com__google__cel-go__common__operators",
        ":github.com__google__cel-go__common__types",
        ":github.com__google__cel-go__common__types__ref",
        ":google.golang.org__genproto__googleapis__api__expr__v1alpha1",
    ],
)

go_module(
    name = "github.com__google__cel-go__common__env",
    download = ":_github.com__google__cel-go#download",
    install = ["common/env"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__cel-go__common__decls",
        ":github.com__google__cel-go__common__types",
    ],
)

go_module(
    name = "github.com__google__cel-go__common__functions",
    download = ":_github.com__google__cel-go#download",
    install = ["common/functions"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [":github.com__google__cel-go__common__types__ref"],
)

go_module(
    name = "github.com__google__cel-go__common__operators",
    download = ":_github.com__google__cel-go#download",
    install = ["common/operators"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__google__cel-go__common__overloads",
    download = ":_github.com__google__cel-go#download",
    install = ["common/overloads"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__google__cel-go__common__runes",
    download = ":_github.com__google__cel-go#download",
    install = ["common/runes"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__google__cel-go__common__stdlib",
    download = ":_github.com__google__cel-go#download",
    install = ["common/stdlib"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__cel-go__common",
        ":github.com__google__cel-go__common__decls",
        ":github.com__google__cel-go__common__functions",
        ":github.com__google__cel-go__common__operators",
        ":github.com__google__cel-go__common__overloads",
        ":github.com__google__cel-go__common__types",
        ":github.com__google__cel-go__common__types__ref",
        ":github.com__google__cel-go__common__types__traits",
    ],
)

go_module(
    name = "github.com__google__cel-go__common__types",
    download = ":_github.com__google__cel-go#download",
    install = ["common/types"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [
        ":cel.dev__expr",
        ":github.com__google__cel-go__checker__decls",
        ":github.com__google__cel-go__common__overloads",
        ":github.com__google__cel-go__common__types__pb",
        ":github.com__google__cel-go__common__types__ref",
        ":github.com__google__cel-go__common__types__traits",
        ":github.com__stoewer__go-strcase",
        ":google.golang.org__genproto__googleapis__api__expr__v1alpha1",
        ":google.golang.org__protobuf__encoding__protojson",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__types__known__anypb",
        ":google.golang.org__protobuf__types__known__durationpb",
        ":google.golang.org__protobuf__types__known__structpb",
        ":google.golang.org__protobuf__types__known__timestamppb",
        ":google.golang.org__protobuf__types__known__wrapperspb",
    ],
)

go_module(
    name = "github.com__google__cel-go__common__types__pb",
    download = ":_github.com__google__cel-go#download",
    install = ["common/types/pb"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__genproto__googleapis__api__expr__v1alpha1",
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__types__dynamicpb",
        ":google.golang.org__protobuf__types__known__anypb",
        ":google.golang.org__protobuf__types__known__durationpb",
        ":google.golang.org__protobuf__types__known__emptypb",
        ":google.golang.org__protobuf__types__known__structpb",
        ":google.golang.org__protobuf__types__known__timestamppb",
        ":google.golang.org__protobuf__types__known__wrapperspb",
    ],
)

go_module(
    name = "github.com__google__cel-go__common__types__ref",
    download = ":_github.com__google__cel-go#download",
    install = ["common/types/ref"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__genproto__googleapis__api__expr__v1alpha1",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "github.com__google__cel-go__common__types__traits",
    download = ":_github.com__google__cel-go#download",
    install = ["common/types/traits"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [":github.com__google__cel-go__common__types__ref"],
)

go_module(
    name = "github.com__google__cel-go__ext",
    download = ":_github.com__google__cel-go#download",
    install = ["ext"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__cel-go__cel",
        ":github.com__google__cel-go__checker",
        ":github.com__google__cel-go__common",
        ":github.com__google__cel-go__common__ast",
        ":github.com__google__cel-go__common__decls",
        ":github.com__google__cel-go__common__env",
        ":github.com__google__cel-go__common__operators",
        ":github.com__google__cel-go__common__overloads",
        ":github.com__google__cel-go__common__types",
        ":github.com__google__cel-go__common__types__pb",
        ":github.com__google__cel-go__common__types__ref",
        ":github.com__google__cel-go__common__types__traits",
        ":github.com__google__cel-go__interpreter",
        ":github.com__google__cel-go__parser",
        ":golang.org__x__text__language",
        ":golang.org__x__text__message",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__types__known__structpb",
    ],
)

go_module(
    name = "github.com__google__cel-go__interpreter",
    download = ":_github.com__google__cel-go#download",
    install = ["interpreter"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__cel-go__common",
        ":github.com__google__cel-go__common__ast",
        ":github.com__google__cel-go__common__containers",
        ":github.com__google__cel-go__common__functions",
        ":github.com__google__cel-go__common__operators",
        ":github.com__google__cel-go__common__overloads",
        ":github.com__google__cel-go__common__types",
        ":github.com__google__cel-go__common__types__ref",
        ":github.com__google__cel-go__common__types__traits",
    ],
)

go_module(
    name = "github.com__google__cel-go__parser",
    download = ":_github.com__google__cel-go#download",
    install = ["parser"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__antlr4-go__antlr__v4",
        ":github.com__google__cel-go__common",
        ":github.com__google__cel-go__common__ast",
        ":github.com__google__cel-go__common__operators",
        ":github.com__google__cel-go__common__runes",
        ":github.com__google__cel-go__common__types",
        ":github.com__google__cel-go__common__types__ref",
        ":github.com__google__cel-go__parser__gen",
    ],
)

go_module(
    name = "github.com__google__cel-go__parser__gen",
    download = ":_github.com__google__cel-go#download",
    install = ["parser/gen"],
    module = "github.com/google/cel-go",
    visibility = ["PUBLIC"],
    deps = [":github.com__antlr4-go__antlr__v4"],
)

go_mod_download(
    name = "github.com__google__go-cmp",
    _tag = "download",
    module = "github.com/google/go-cmp",
    version = "v0.7.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__google__go-cmp__cmp",
    download = ":_github.com__google__go-cmp#download",
    install = ["cmp"],
    module = "github.com/google/go-cmp",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__go-cmp__cmp__internal__diff",
        ":github.com__google__go-cmp__cmp__internal__flags",
        ":github.com__google__go-cmp__cmp__internal__function",
        ":github.com__google__go-cmp__cmp__internal__value",
    ],
)

go_module(
    name = "github.com__google__go-cmp__cmp__cmpopts",
    download = ":_github.com__google__go-cmp#download",
    install = ["cmp/cmpopts"],
    module = "github.com/google/go-cmp",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__go-cmp__cmp",
        ":github.com__google__go-cmp__cmp__internal__function",
    ],
)

go_module(
    name = "github.com__google__go-cmp__cmp__internal__diff",
    download = ":_github.com__google__go-cmp#download",
    install = ["cmp/internal/diff"],
    module = "github.com/google/go-cmp",
    visibility = ["PUBLIC"],
    deps = [":github.com__google__go-cmp__cmp__internal__flags"],
)

go_module(
    name = "github.com__google__go-cmp__cmp__internal__flags",
    download = ":_github.com__google__go-cmp#download",
    install = ["cmp/internal/flags"],
    module = "github.com/google/go-cmp",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__google__go-cmp__cmp__internal__function",
    download = ":_github.com__google__go-cmp#download",
    install = ["cmp/internal/function"],
    module = "github.com/google/go-cmp",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__google__go-cmp__cmp__internal__value",
    download = ":_github.com__google__go-cmp#download",
    install = ["cmp/internal/value"],
    module = "github.com/google/go-cmp",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__google__go-jsonnet",
    _tag = "download",
    module = "github.com/google/go-jsonnet",
    version = "v0.21.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__google__go-jsonnet",
    download = ":_github.com__google__go-jsonnet#download",
    install = ["."],
    module = "github.com/google/go-jsonnet",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__go-jsonnet__ast",
        ":github.com__google__go-jsonnet__astgen",
        ":github.com__google__go-jsonnet__internal__errors",
        ":github.com__google__go-jsonnet__internal__parser",
        ":github.com__google__go-jsonnet__internal__program",
        ":github.com__google__go-jsonnet__toolutils",
        ":golang.org__x__crypto__sha3",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "github.com__google__go-jsonnet__ast",
    download = ":_github.com__google__go-jsonnet#download",
    install = ["ast"],
    module = "github.com/google/go-jsonnet",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__google__go-jsonnet__astgen",
    download = ":_github.com__google__go-jsonnet#download",
    install = ["astgen"],
    module = "github.com/google/go-jsonnet",
    visibility = ["PUBLIC"],
    deps = [":github.com__google__go-jsonnet__ast"],
)

go_module(
    name = "github.com__google__go-jsonnet__internal__errors",
    download = ":_github.com__google__go-jsonnet#download",
    install = ["internal/errors"],
    module = "github.com/google/go-jsonnet",
    visibility = ["PUBLIC"],
    deps = [":github.com__google__go-jsonnet__ast"],
)

go_module(
    name = "github.com__google__go-jsonnet__internal__parser",
    download = ":_github.com__google__go-jsonnet#download",
    install = ["internal/parser"],
    module = "github.com/google/go-jsonnet",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__go-jsonnet__ast",
        ":github.com__google__go-jsonnet__internal__errors",
    ],
)

go_module(
    name = "github.com__google__go-jsonnet__internal__program",
    download = ":_github.com__google__go-jsonnet#download",
    install = ["internal/program"],
    module = "github.com/google/go-jsonnet",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__go-jsonnet__ast",
        ":github.com__google__go-jsonnet__internal__errors",
        ":github.com__google__go-jsonnet__internal__parser",
    ],
)

go_module(
    name = "github.com__google__go-jsonnet__toolutils",
    download = ":_github.com__google__go-jsonnet#download",
    install = ["toolutils"],
    module = "github.com/google/go-jsonnet",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__go-jsonnet__ast",
        ":github.com__google__go-jsonnet__internal__parser",
    ],
)

go_mod_download(
    name = "github.com__google__uuid",
    _tag = "download",
    module = "github.com/google/uuid",
    version = "v1.6.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__google__uuid",
    download = ":_github.com__google__uuid#download",
    install = ["."],
    module = "github.com/google/uuid",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__grpc-ecosystem__go-grpc-middleware__providers__prometheus",
    _tag = "download",
    module = "github.com/grpc-ecosystem/go-grpc-middleware/providers/prometheus",
    version = "v1.1.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__grpc-ecosystem__go-grpc-middleware__providers__prometheus",
    download = ":_github.com__grpc-ecosystem__go-grpc-middleware__providers__prometheus#download",
    install = ["."],
    module = "github.com/grpc-ecosystem/go-grpc-middleware/providers/prometheus",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__grpc-ecosystem__go-grpc-middleware__v2__interceptors",
        ":github.com__prometheus__client_golang__prometheus",
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__reflection",
        ":google.golang.org__grpc__status",
    ],
)

go_mod_download(
    name = "github.com__grpc-ecosystem__go-grpc-middleware__v2",
    _tag = "download",
    module = "github.com/grpc-ecosystem/go-grpc-middleware/v2",
    version = "v2.3.2",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__grpc-ecosystem__go-grpc-middleware__v2",
    download = ":_github.com__grpc-ecosystem__go-grpc-middleware__v2#download",
    install = ["."],
    module = "github.com/grpc-ecosystem/go-grpc-middleware/v2",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc"],
)

go_module(
    name = "github.com__grpc-ecosystem__go-grpc-middleware__v2__interceptors",
    download = ":_github.com__grpc-ecosystem__go-grpc-middleware__v2#download",
    install = ["interceptors"],
    module = "github.com/grpc-ecosystem/go-grpc-middleware/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
    ],
)

go_module(
    name = "github.com__grpc-ecosystem__go-grpc-middleware__v2__interceptors__logging",
    download = ":_github.com__grpc-ecosystem__go-grpc-middleware__v2#download",
    install = ["interceptors/logging"],
    module = "github.com/grpc-ecosystem/go-grpc-middleware/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__grpc-ecosystem__go-grpc-middleware__v2__interceptors",
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__peer",
        ":google.golang.org__grpc__status",
        ":google.golang.org__protobuf__proto",
    ],
)

go_module(
    name = "github.com__grpc-ecosystem__go-grpc-middleware__v2__interceptors__protovalidate",
    download = ":_github.com__grpc-ecosystem__go-grpc-middleware__v2#download",
    install = ["interceptors/protovalidate"],
    module = "github.com/grpc-ecosystem/go-grpc-middleware/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":buf.build__go__protovalidate",
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__status",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "github.com__grpc-ecosystem__go-grpc-middleware__v2__interceptors__recovery",
    download = ":_github.com__grpc-ecosystem__go-grpc-middleware__v2#download",
    install = ["interceptors/recovery"],
    module = "github.com/grpc-ecosystem/go-grpc-middleware/v2",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc"],
)

go_module(
    name = "github.com__grpc-ecosystem__go-grpc-middleware__v2__interceptors__retry",
    download = ":_github.com__grpc-ecosystem__go-grpc-middleware__v2#download",
    install = ["interceptors/retry"],
    module = "github.com/grpc-ecosystem/go-grpc-middleware/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__grpc-ecosystem__go-grpc-middleware__v2__metadata",
        ":golang.org__x__net__trace",
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__status",
    ],
)

go_module(
    name = "github.com__grpc-ecosystem__go-grpc-middleware__v2__interceptors__selector",
    download = ":_github.com__grpc-ecosystem__go-grpc-middleware__v2#download",
    install = ["interceptors/selector"],
    module = "github.com/grpc-ecosystem/go-grpc-middleware/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__grpc-ecosystem__go-grpc-middleware__v2__interceptors",
        ":google.golang.org__grpc",
    ],
)

go_module(
    name = "github.com__grpc-ecosystem__go-grpc-middleware__v2__metadata",
    download = ":_github.com__grpc-ecosystem__go-grpc-middleware__v2#download",
    install = ["metadata"],
    module = "github.com/grpc-ecosystem/go-grpc-middleware/v2",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__metadata"],
)

go_mod_download(
    name = "github.com__grpc-ecosystem__grpc-gateway__v2",
    _tag = "download",
    module = "github.com/grpc-ecosystem/grpc-gateway/v2",
    version = "v2.11.3",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__grpc-ecosystem__grpc-gateway__v2__internal__casing",
    download = ":_github.com__grpc-ecosystem__grpc-gateway__v2#download",
    install = ["internal/casing"],
    module = "github.com/grpc-ecosystem/grpc-gateway/v2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__grpc-ecosystem__grpc-gateway__v2__internal__codegenerator",
    download = ":_github.com__grpc-ecosystem__grpc-gateway__v2#download",
    install = ["internal/codegenerator"],
    module = "github.com/grpc-ecosystem/grpc-gateway/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__compiler__protogen",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__types__pluginpb",
    ],
)

go_module(
    name = "github.com__grpc-ecosystem__grpc-gateway__v2__internal__descriptor",
    download = ":_github.com__grpc-ecosystem__grpc-gateway__v2#download",
    install = ["internal/descriptor"],
    module = "github.com/grpc-ecosystem/grpc-gateway/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__glog",
        ":github.com__grpc-ecosystem__grpc-gateway__v2__internal__casing",
        ":github.com__grpc-ecosystem__grpc-gateway__v2__internal__codegenerator",
        ":github.com__grpc-ecosystem__grpc-gateway__v2__internal__descriptor__apiconfig",
        ":github.com__grpc-ecosystem__grpc-gateway__v2__internal__descriptor__openapiconfig",
        ":github.com__grpc-ecosystem__grpc-gateway__v2__internal__httprule",
        ":github.com__grpc-ecosystem__grpc-gateway__v2__protoc-gen-openapiv2__options",
        ":golang.org__x__text__cases",
        ":golang.org__x__text__language",
        ":google.golang.org__genproto__googleapis__api__annotations",
        ":google.golang.org__protobuf__compiler__protogen",
        ":google.golang.org__protobuf__encoding__protojson",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__types__descriptorpb",
        ":google.golang.org__protobuf__types__pluginpb",
        ":gopkg.in__yaml.v3",
    ],
)

go_module(
    name = "github.com__grpc-ecosystem__grpc-gateway__v2__internal__descriptor__apiconfig",
    download = ":_github.com__grpc-ecosystem__grpc-gateway__v2#download",
    install = ["internal/descriptor/apiconfig"],
    module = "github.com/grpc-ecosystem/grpc-gateway/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__genproto__googleapis__api__annotations",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "github.com__grpc-ecosystem__grpc-gateway__v2__internal__descriptor__openapiconfig",
    download = ":_github.com__grpc-ecosystem__grpc-gateway__v2#download",
    install = ["internal/descriptor/openapiconfig"],
    module = "github.com/grpc-ecosystem/grpc-gateway/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__grpc-ecosystem__grpc-gateway__v2__protoc-gen-openapiv2__options",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "github.com__grpc-ecosystem__grpc-gateway__v2__internal__generator",
    download = ":_github.com__grpc-ecosystem__grpc-gateway__v2#download",
    install = ["internal/generator"],
    module = "github.com/grpc-ecosystem/grpc-gateway/v2",
    visibility = ["PUBLIC"],
    deps = [":github.com__grpc-ecosystem__grpc-gateway__v2__internal__descriptor"],
)

go_module(
    name = "github.com__grpc-ecosystem__grpc-gateway__v2__internal__httprule",
    download = ":_github.com__grpc-ecosystem__grpc-gateway__v2#download",
    install = ["internal/httprule"],
    module = "github.com/grpc-ecosystem/grpc-gateway/v2",
    visibility = ["PUBLIC"],
    deps = [":github.com__grpc-ecosystem__grpc-gateway__v2__utilities"],
)

go_module(
    name = "github.com__grpc-ecosystem__grpc-gateway__v2__protoc-gen-grpc-gateway",
    download = ":_github.com__grpc-ecosystem__grpc-gateway__v2#download",
    install = ["protoc-gen-grpc-gateway"],
    module = "github.com/grpc-ecosystem/grpc-gateway/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__glog",
        ":github.com__grpc-ecosystem__grpc-gateway__v2__internal__codegenerator",
        ":github.com__grpc-ecosystem__grpc-gateway__v2__internal__descriptor",
        ":github.com__grpc-ecosystem__grpc-gateway__v2__protoc-gen-grpc-gateway__internal__gengateway",
        ":google.golang.org__protobuf__compiler__protogen",
    ],
)

go_module(
    name = "github.com__grpc-ecosystem__grpc-gateway__v2__protoc-gen-grpc-gateway__internal__gengateway",
    download = ":_github.com__grpc-ecosystem__grpc-gateway__v2#download",
    install = ["protoc-gen-grpc-gateway/internal/gengateway"],
    module = "github.com/grpc-ecosystem/grpc-gateway/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__glog",
        ":github.com__grpc-ecosystem__grpc-gateway__v2__internal__casing",
        ":github.com__grpc-ecosystem__grpc-gateway__v2__internal__descriptor",
        ":github.com__grpc-ecosystem__grpc-gateway__v2__internal__generator",
        ":github.com__grpc-ecosystem__grpc-gateway__v2__utilities",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__types__pluginpb",
    ],
)

go_module(
    name = "github.com__grpc-ecosystem__grpc-gateway__v2__protoc-gen-openapiv2__options",
    download = ":_github.com__grpc-ecosystem__grpc-gateway__v2#download",
    install = ["protoc-gen-openapiv2/options"],
    module = "github.com/grpc-ecosystem/grpc-gateway/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__descriptorpb",
        ":google.golang.org__protobuf__types__known__structpb",
    ],
)

go_module(
    name = "github.com__grpc-ecosystem__grpc-gateway__v2__runtime",
    download = ":_github.com__grpc-ecosystem__grpc-gateway__v2#download",
    install = ["runtime"],
    module = "github.com/grpc-ecosystem/grpc-gateway/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__grpc-ecosystem__grpc-gateway__v2__internal__httprule",
        ":github.com__grpc-ecosystem__grpc-gateway__v2__utilities",
        ":google.golang.org__genproto__googleapis__api__httpbody",
        ":google.golang.org__genproto__protobuf__field_mask",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__health__grpc_health_v1",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__status",
        ":google.golang.org__protobuf__encoding__protojson",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__types__known__durationpb",
        ":google.golang.org__protobuf__types__known__structpb",
        ":google.golang.org__protobuf__types__known__timestamppb",
        ":google.golang.org__protobuf__types__known__wrapperspb",
    ],
)

go_module(
    name = "github.com__grpc-ecosystem__grpc-gateway__v2__utilities",
    download = ":_github.com__grpc-ecosystem__grpc-gateway__v2#download",
    install = ["utilities"],
    module = "github.com/grpc-ecosystem/grpc-gateway/v2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__hashicorp__errwrap",
    _tag = "download",
    module = "github.com/hashicorp/errwrap",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__hashicorp__errwrap",
    download = ":_github.com__hashicorp__errwrap#download",
    install = ["."],
    module = "github.com/hashicorp/errwrap",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__hashicorp__go-multierror",
    _tag = "download",
    module = "github.com/hashicorp/go-multierror",
    version = "v1.1.1",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__hashicorp__go-multierror",
    download = ":_github.com__hashicorp__go-multierror#download",
    install = ["."],
    module = "github.com/hashicorp/go-multierror",
    visibility = ["PUBLIC"],
    deps = [":github.com__hashicorp__errwrap"],
)

go_mod_download(
    name = "github.com__huandu__xstrings",
    _tag = "download",
    module = "github.com/huandu/xstrings",
    version = "v1.5.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__huandu__xstrings",
    download = ":_github.com__huandu__xstrings#download",
    install = ["."],
    module = "github.com/huandu/xstrings",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__iancoleman__strcase",
    _tag = "download",
    module = "github.com/iancoleman/strcase",
    version = "v0.2.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__iancoleman__strcase",
    download = ":_github.com__iancoleman__strcase#download",
    install = ["."],
    module = "github.com/iancoleman/strcase",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__jackc__pgerrcode",
    _tag = "download",
    module = "github.com/jackc/pgerrcode",
    version = "v0.0.0-20250907135507-afb5586c32a6",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__jackc__pgerrcode",
    download = ":_github.com__jackc__pgerrcode#download",
    install = ["."],
    module = "github.com/jackc/pgerrcode",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__jackc__pgpassfile",
    _tag = "download",
    module = "github.com/jackc/pgpassfile",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__jackc__pgpassfile",
    download = ":_github.com__jackc__pgpassfile#download",
    install = ["."],
    module = "github.com/jackc/pgpassfile",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__jackc__pgservicefile",
    _tag = "download",
    module = "github.com/jackc/pgservicefile",
    version = "v0.0.0-20240606120523-5a60cdf6a761",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__jackc__pgservicefile",
    download = ":_github.com__jackc__pgservicefile#download",
    install = ["."],
    module = "github.com/jackc/pgservicefile",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__jackc__pgx__v5",
    _tag = "download",
    module = "github.com/jackc/pgx/v5",
    version = "v5.7.6",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__jackc__pgx__v5",
    download = ":_github.com__jackc__pgx__v5#download",
    install = ["."],
    module = "github.com/jackc/pgx/v5",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__jackc__pgx__v5__internal__pgio",
        ":github.com__jackc__pgx__v5__internal__sanitize",
        ":github.com__jackc__pgx__v5__internal__stmtcache",
        ":github.com__jackc__pgx__v5__pgconn",
        ":github.com__jackc__pgx__v5__pgtype",
    ],
)

go_module(
    name = "github.com__jackc__pgx__v5__internal__iobufpool",
    download = ":_github.com__jackc__pgx__v5#download",
    install = ["internal/iobufpool"],
    module = "github.com/jackc/pgx/v5",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__jackc__pgx__v5__internal__pgio",
    download = ":_github.com__jackc__pgx__v5#download",
    install = ["internal/pgio"],
    module = "github.com/jackc/pgx/v5",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__jackc__pgx__v5__internal__sanitize",
    download = ":_github.com__jackc__pgx__v5#download",
    install = ["internal/sanitize"],
    module = "github.com/jackc/pgx/v5",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__jackc__pgx__v5__internal__stmtcache",
    download = ":_github.com__jackc__pgx__v5#download",
    install = ["internal/stmtcache"],
    module = "github.com/jackc/pgx/v5",
    visibility = ["PUBLIC"],
    deps = [":github.com__jackc__pgx__v5__pgconn"],
)

go_module(
    name = "github.com__jackc__pgx__v5__pgconn",
    download = ":_github.com__jackc__pgx__v5#download",
    install = ["pgconn"],
    module = "github.com/jackc/pgx/v5",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__jackc__pgpassfile",
        ":github.com__jackc__pgservicefile",
        ":github.com__jackc__pgx__v5__internal__iobufpool",
        ":github.com__jackc__pgx__v5__internal__pgio",
        ":github.com__jackc__pgx__v5__pgconn__ctxwatch",
        ":github.com__jackc__pgx__v5__pgconn__internal__bgreader",
        ":github.com__jackc__pgx__v5__pgproto3",
        ":golang.org__x__crypto__pbkdf2",
        ":golang.org__x__text__secure__precis",
    ],
)

go_module(
    name = "github.com__jackc__pgx__v5__pgconn__ctxwatch",
    download = ":_github.com__jackc__pgx__v5#download",
    install = ["pgconn/ctxwatch"],
    module = "github.com/jackc/pgx/v5",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__jackc__pgx__v5__pgconn__internal__bgreader",
    download = ":_github.com__jackc__pgx__v5#download",
    install = ["pgconn/internal/bgreader"],
    module = "github.com/jackc/pgx/v5",
    visibility = ["PUBLIC"],
    deps = [":github.com__jackc__pgx__v5__internal__iobufpool"],
)

go_module(
    name = "github.com__jackc__pgx__v5__pgproto3",
    download = ":_github.com__jackc__pgx__v5#download",
    install = ["pgproto3"],
    module = "github.com/jackc/pgx/v5",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__jackc__pgx__v5__internal__iobufpool",
        ":github.com__jackc__pgx__v5__internal__pgio",
    ],
)

go_module(
    name = "github.com__jackc__pgx__v5__pgtype",
    download = ":_github.com__jackc__pgx__v5#download",
    install = ["pgtype"],
    module = "github.com/jackc/pgx/v5",
    visibility = ["PUBLIC"],
    deps = [":github.com__jackc__pgx__v5__internal__pgio"],
)

go_module(
    name = "github.com__jackc__pgx__v5__pgxpool",
    download = ":_github.com__jackc__pgx__v5#download",
    install = ["pgxpool"],
    module = "github.com/jackc/pgx/v5",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__jackc__pgx__v5",
        ":github.com__jackc__pgx__v5__pgconn",
        ":github.com__jackc__puddle__v2",
    ],
)

go_mod_download(
    name = "github.com__jackc__puddle__v2",
    _tag = "download",
    module = "github.com/jackc/puddle/v2",
    version = "v2.2.2",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__jackc__puddle__v2",
    download = ":_github.com__jackc__puddle__v2#download",
    install = ["."],
    module = "github.com/jackc/puddle/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__jackc__puddle__v2__internal__genstack",
        ":golang.org__x__sync__semaphore",
    ],
)

go_module(
    name = "github.com__jackc__puddle__v2__internal__genstack",
    download = ":_github.com__jackc__puddle__v2#download",
    install = ["internal/genstack"],
    module = "github.com/jackc/puddle/v2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__jessevdk__go-flags",
    _tag = "download",
    module = "github.com/jessevdk/go-flags",
    version = "v1.6.1",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__jessevdk__go-flags",
    download = ":_github.com__jessevdk__go-flags#download",
    install = ["."],
    module = "github.com/jessevdk/go-flags",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__sys__unix"],
)

go_mod_download(
    name = "github.com__joonix__log",
    _tag = "download",
    module = "github.com/joonix/log",
    version = "v0.0.0-20230221083239-7988383bab32",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__joonix__log",
    download = ":_github.com__joonix__log#download",
    install = ["."],
    module = "github.com/joonix/log",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__ptypes",
        ":github.com__golang__protobuf__ptypes__duration",
        ":github.com__sirupsen__logrus",
        ":google.golang.org__genproto__googleapis__logging__type",
    ],
)

go_mod_download(
    name = "github.com__lib__pq",
    _tag = "download",
    module = "github.com/lib/pq",
    version = "v1.10.9",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__lib__pq",
    download = ":_github.com__lib__pq#download",
    install = ["."],
    module = "github.com/lib/pq",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__lib__pq__oid",
        ":github.com__lib__pq__scram",
    ],
)

go_module(
    name = "github.com__lib__pq__oid",
    download = ":_github.com__lib__pq#download",
    install = ["oid"],
    module = "github.com/lib/pq",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__lib__pq__scram",
    download = ":_github.com__lib__pq#download",
    install = ["scram"],
    module = "github.com/lib/pq",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__mennanov__fmutils",
    _tag = "download",
    module = "github.com/mennanov/fmutils",
    version = "v0.3.3",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__mennanov__fmutils",
    download = ":_github.com__mennanov__fmutils#download",
    install = ["."],
    module = "github.com/mennanov/fmutils",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_mod_download(
    name = "github.com__mitchellh__copystructure",
    _tag = "download",
    module = "github.com/mitchellh/copystructure",
    version = "v1.2.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__mitchellh__copystructure",
    download = ":_github.com__mitchellh__copystructure#download",
    install = ["."],
    module = "github.com/mitchellh/copystructure",
    visibility = ["PUBLIC"],
    deps = [":github.com__mitchellh__reflectwalk"],
)

go_mod_download(
    name = "github.com__mitchellh__mapstructure",
    _tag = "download",
    module = "github.com/mitchellh/mapstructure",
    version = "v1.5.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__mitchellh__mapstructure",
    download = ":_github.com__mitchellh__mapstructure#download",
    install = ["."],
    module = "github.com/mitchellh/mapstructure",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__mitchellh__reflectwalk",
    _tag = "download",
    module = "github.com/mitchellh/reflectwalk",
    version = "v1.0.2",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__mitchellh__reflectwalk",
    download = ":_github.com__mitchellh__reflectwalk#download",
    install = ["."],
    module = "github.com/mitchellh/reflectwalk",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__munnerz__goautoneg",
    _tag = "download",
    module = "github.com/munnerz/goautoneg",
    version = "v0.0.0-20191010083416-a7dc8b61c822",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__munnerz__goautoneg",
    download = ":_github.com__munnerz__goautoneg#download",
    install = ["."],
    module = "github.com/munnerz/goautoneg",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__please-build__gcfg",
    _tag = "download",
    module = "github.com/please-build/gcfg",
    version = "v1.7.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__please-build__gcfg",
    download = ":_github.com__please-build__gcfg#download",
    install = ["."],
    module = "github.com/please-build/gcfg",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__please-build__gcfg__scanner",
        ":github.com__please-build__gcfg__token",
        ":github.com__please-build__gcfg__types",
        ":gopkg.in__warnings.v0",
    ],
)

go_module(
    name = "github.com__please-build__gcfg__scanner",
    download = ":_github.com__please-build__gcfg#download",
    install = ["scanner"],
    module = "github.com/please-build/gcfg",
    visibility = ["PUBLIC"],
    deps = [":github.com__please-build__gcfg__token"],
)

go_module(
    name = "github.com__please-build__gcfg__token",
    download = ":_github.com__please-build__gcfg#download",
    install = ["token"],
    module = "github.com/please-build/gcfg",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__please-build__gcfg__types",
    download = ":_github.com__please-build__gcfg#download",
    install = ["types"],
    module = "github.com/please-build/gcfg",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__pmezard__go-difflib",
    _tag = "download",
    module = "github.com/pmezard/go-difflib",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__pmezard__go-difflib__difflib",
    download = ":_github.com__pmezard__go-difflib#download",
    install = ["difflib"],
    module = "github.com/pmezard/go-difflib",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__prometheus__client_golang",
    _tag = "download",
    module = "github.com/prometheus/client_golang",
    version = "v1.23.2",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__prometheus__client_golang__internal__github.com__golang__gddo__httputil",
    download = ":_github.com__prometheus__client_golang#download",
    install = ["internal/github.com/golang/gddo/httputil"],
    module = "github.com/prometheus/client_golang",
    visibility = ["PUBLIC"],
    deps = [":github.com__prometheus__client_golang__internal__github.com__golang__gddo__httputil__header"],
)

go_module(
    name = "github.com__prometheus__client_golang__internal__github.com__golang__gddo__httputil__header",
    download = ":_github.com__prometheus__client_golang#download",
    install = ["internal/github.com/golang/gddo/httputil/header"],
    module = "github.com/prometheus/client_golang",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__prometheus__client_golang__prometheus",
    download = ":_github.com__prometheus__client_golang#download",
    install = ["prometheus"],
    module = "github.com/prometheus/client_golang",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__beorn7__perks__quantile",
        ":github.com__cespare__xxhash__v2",
        ":github.com__prometheus__client_golang__prometheus__internal",
        ":github.com__prometheus__client_model__go",
        ":github.com__prometheus__common__expfmt",
        ":github.com__prometheus__common__model",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__types__known__timestamppb",
    ] + select({
        ":__config_darwin_amd64": [":golang.org__x__sys__unix"],
        ":__config_darwin_arm64": [":golang.org__x__sys__unix"],
        ":__config_linux_amd64": [":github.com__prometheus__procfs"],
        ":__config_linux_arm64": [":github.com__prometheus__procfs"],
        "default": [],
    }),
)

go_module(
    name = "github.com__prometheus__client_golang__prometheus__internal",
    download = ":_github.com__prometheus__client_golang#download",
    install = ["prometheus/internal"],
    module = "github.com/prometheus/client_golang",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__prometheus__client_model__go",
        ":github.com__prometheus__common__model",
    ],
)

go_module(
    name = "github.com__prometheus__client_golang__prometheus__promauto",
    download = ":_github.com__prometheus__client_golang#download",
    install = ["prometheus/promauto"],
    module = "github.com/prometheus/client_golang",
    visibility = ["PUBLIC"],
    deps = [":github.com__prometheus__client_golang__prometheus"],
)

go_module(
    name = "github.com__prometheus__client_golang__prometheus__promhttp",
    download = ":_github.com__prometheus__client_golang#download",
    install = ["prometheus/promhttp"],
    module = "github.com/prometheus/client_golang",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__prometheus__client_golang__internal__github.com__golang__gddo__httputil",
        ":github.com__prometheus__client_golang__prometheus",
        ":github.com__prometheus__client_golang__prometheus__promhttp__internal",
        ":github.com__prometheus__client_model__go",
        ":github.com__prometheus__common__expfmt",
    ],
)

go_module(
    name = "github.com__prometheus__client_golang__prometheus__promhttp__internal",
    download = ":_github.com__prometheus__client_golang#download",
    install = ["prometheus/promhttp/internal"],
    module = "github.com/prometheus/client_golang",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__prometheus__client_model",
    _tag = "download",
    module = "github.com/prometheus/client_model",
    version = "v0.6.2",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__prometheus__client_model__go",
    download = ":_github.com__prometheus__client_model#download",
    install = ["go"],
    module = "github.com/prometheus/client_model",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__timestamppb",
    ],
)

go_mod_download(
    name = "github.com__prometheus__common",
    _tag = "download",
    module = "github.com/prometheus/common",
    version = "v0.66.1",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__prometheus__common__expfmt",
    download = ":_github.com__prometheus__common#download",
    install = ["expfmt"],
    module = "github.com/prometheus/common",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__munnerz__goautoneg",
        ":github.com__prometheus__client_model__go",
        ":github.com__prometheus__common__model",
        ":google.golang.org__protobuf__encoding__protodelim",
        ":google.golang.org__protobuf__encoding__prototext",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__types__known__timestamppb",
    ],
)

go_module(
    name = "github.com__prometheus__common__model",
    download = ":_github.com__prometheus__common#download",
    install = ["model"],
    module = "github.com/prometheus/common",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__prometheus__client_model__go",
        ":go.yaml.in__yaml__v2",
        ":google.golang.org__protobuf__proto",
    ],
)

go_mod_download(
    name = "github.com__prometheus__procfs",
    _tag = "download",
    module = "github.com/prometheus/procfs",
    version = "v0.16.1",
    visibility = ["PUBLIC"],
)

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["linux"],
):
    go_module(name = "github.com__prometheus__procfs", download = ":_github.com__prometheus__procfs#download", install = ["."], module = "github.com/prometheus/procfs", visibility = ["PUBLIC"], deps = select({":__config_darwin_amd64": [], ":__config_darwin_arm64": [], ":__config_linux_amd64": [":github.com__prometheus__procfs__internal__fs", ":github.com__prometheus__procfs__internal__util", ":golang.org__x__sys__unix"], ":__config_linux_arm64": [":github.com__prometheus__procfs__internal__fs", ":github.com__prometheus__procfs__internal__util", ":golang.org__x__sys__unix"], "default": []}))

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["linux"],
):
    go_module(name = "github.com__prometheus__procfs__internal__fs", download = ":_github.com__prometheus__procfs#download", install = ["internal/fs"], module = "github.com/prometheus/procfs", visibility = ["PUBLIC"], deps = [])

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["linux"],
):
    go_module(name = "github.com__prometheus__procfs__internal__util", download = ":_github.com__prometheus__procfs#download", install = ["internal/util"], module = "github.com/prometheus/procfs", visibility = ["PUBLIC"], deps = [])

go_mod_download(
    name = "github.com__scylladb__go-set",
    _tag = "download",
    module = "github.com/scylladb/go-set",
    version = "v1.0.2",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__scylladb__go-set__strset",
    download = ":_github.com__scylladb__go-set#download",
    install = ["strset"],
    module = "github.com/scylladb/go-set",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__sercand__kuberesolver__v5",
    _tag = "download",
    module = "github.com/sercand/kuberesolver/v5",
    version = "v5.1.1",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__sercand__kuberesolver__v5",
    download = ":_github.com__sercand__kuberesolver__v5#download",
    install = ["."],
    module = "github.com/sercand/kuberesolver/v5",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__fsnotify__fsnotify",
        ":github.com__prometheus__client_golang__prometheus",
        ":github.com__prometheus__client_golang__prometheus__promauto",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__resolver",
    ],
)

go_mod_download(
    name = "github.com__shopspring__decimal",
    _tag = "download",
    module = "github.com/shopspring/decimal",
    version = "v1.4.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__shopspring__decimal",
    download = ":_github.com__shopspring__decimal#download",
    install = ["."],
    module = "github.com/shopspring/decimal",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__sirupsen__logrus",
    _tag = "download",
    module = "github.com/sirupsen/logrus",
    version = "v1.9.3",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__sirupsen__logrus",
    download = ":_github.com__sirupsen__logrus#download",
    install = ["."],
    module = "github.com/sirupsen/logrus",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__sys__unix"],
)

go_module(
    name = "github.com__sirupsen__logrus__hooks__writer",
    download = ":_github.com__sirupsen__logrus#download",
    install = ["hooks/writer"],
    module = "github.com/sirupsen/logrus",
    visibility = ["PUBLIC"],
    deps = [":github.com__sirupsen__logrus"],
)

go_mod_download(
    name = "github.com__spf13__cast",
    _tag = "download",
    module = "github.com/spf13/cast",
    version = "v1.7.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__spf13__cast",
    download = ":_github.com__spf13__cast#download",
    install = ["."],
    module = "github.com/spf13/cast",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__spf13__cobra",
    _tag = "download",
    module = "github.com/spf13/cobra",
    version = "v1.10.1",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__spf13__cobra",
    download = ":_github.com__spf13__cobra#download",
    install = ["."],
    module = "github.com/spf13/cobra",
    visibility = ["PUBLIC"],
    deps = [":github.com__spf13__pflag"],
)

go_mod_download(
    name = "github.com__spf13__pflag",
    _tag = "download",
    module = "github.com/spf13/pflag",
    version = "v1.0.9",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__spf13__pflag",
    download = ":_github.com__spf13__pflag#download",
    install = ["."],
    module = "github.com/spf13/pflag",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__spiffe__go-spiffe__v2",
    _tag = "download",
    module = "github.com/spiffe/go-spiffe/v2",
    version = "v2.5.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__spiffe__go-spiffe__v2__bundle__jwtbundle",
    download = ":_github.com__spiffe__go-spiffe__v2#download",
    install = ["bundle/jwtbundle"],
    module = "github.com/spiffe/go-spiffe/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-jose__go-jose__v4",
        ":github.com__spiffe__go-spiffe__v2__internal__jwtutil",
        ":github.com__spiffe__go-spiffe__v2__spiffeid",
        ":github.com__zeebo__errs",
    ],
)

go_module(
    name = "github.com__spiffe__go-spiffe__v2__bundle__spiffebundle",
    download = ":_github.com__spiffe__go-spiffe__v2#download",
    install = ["bundle/spiffebundle"],
    module = "github.com/spiffe/go-spiffe/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-jose__go-jose__v4",
        ":github.com__spiffe__go-spiffe__v2__bundle__jwtbundle",
        ":github.com__spiffe__go-spiffe__v2__bundle__x509bundle",
        ":github.com__spiffe__go-spiffe__v2__internal__jwtutil",
        ":github.com__spiffe__go-spiffe__v2__internal__x509util",
        ":github.com__spiffe__go-spiffe__v2__spiffeid",
        ":github.com__zeebo__errs",
    ],
)

go_module(
    name = "github.com__spiffe__go-spiffe__v2__bundle__x509bundle",
    download = ":_github.com__spiffe__go-spiffe__v2#download",
    install = ["bundle/x509bundle"],
    module = "github.com/spiffe/go-spiffe/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__spiffe__go-spiffe__v2__internal__pemutil",
        ":github.com__spiffe__go-spiffe__v2__internal__x509util",
        ":github.com__spiffe__go-spiffe__v2__spiffeid",
        ":github.com__zeebo__errs",
    ],
)

go_module(
    name = "github.com__spiffe__go-spiffe__v2__internal__cryptoutil",
    download = ":_github.com__spiffe__go-spiffe__v2#download",
    install = ["internal/cryptoutil"],
    module = "github.com/spiffe/go-spiffe/v2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__spiffe__go-spiffe__v2__internal__jwtutil",
    download = ":_github.com__spiffe__go-spiffe__v2#download",
    install = ["internal/jwtutil"],
    module = "github.com/spiffe/go-spiffe/v2",
    visibility = ["PUBLIC"],
    deps = [":github.com__spiffe__go-spiffe__v2__internal__cryptoutil"],
)

go_module(
    name = "github.com__spiffe__go-spiffe__v2__internal__pemutil",
    download = ":_github.com__spiffe__go-spiffe__v2#download",
    install = ["internal/pemutil"],
    module = "github.com/spiffe/go-spiffe/v2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__spiffe__go-spiffe__v2__internal__x509util",
    download = ":_github.com__spiffe__go-spiffe__v2#download",
    install = ["internal/x509util"],
    module = "github.com/spiffe/go-spiffe/v2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__spiffe__go-spiffe__v2__logger",
    download = ":_github.com__spiffe__go-spiffe__v2#download",
    install = ["logger"],
    module = "github.com/spiffe/go-spiffe/v2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__spiffe__go-spiffe__v2__proto__spiffe__workload",
    download = ":_github.com__spiffe__go-spiffe__v2#download",
    install = ["proto/spiffe/workload"],
    module = "github.com/spiffe/go-spiffe/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__status",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__structpb",
    ],
)

go_module(
    name = "github.com__spiffe__go-spiffe__v2__spiffeid",
    download = ":_github.com__spiffe__go-spiffe__v2#download",
    install = ["spiffeid"],
    module = "github.com/spiffe/go-spiffe/v2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__spiffe__go-spiffe__v2__spiffetls__tlsconfig",
    download = ":_github.com__spiffe__go-spiffe__v2#download",
    install = ["spiffetls/tlsconfig"],
    module = "github.com/spiffe/go-spiffe/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__spiffe__go-spiffe__v2__bundle__x509bundle",
        ":github.com__spiffe__go-spiffe__v2__spiffeid",
        ":github.com__spiffe__go-spiffe__v2__svid__x509svid",
    ],
)

go_module(
    name = "github.com__spiffe__go-spiffe__v2__svid__jwtsvid",
    download = ":_github.com__spiffe__go-spiffe__v2#download",
    install = ["svid/jwtsvid"],
    module = "github.com/spiffe/go-spiffe/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-jose__go-jose__v4",
        ":github.com__go-jose__go-jose__v4__jwt",
        ":github.com__spiffe__go-spiffe__v2__bundle__jwtbundle",
        ":github.com__spiffe__go-spiffe__v2__spiffeid",
        ":github.com__zeebo__errs",
    ],
)

go_module(
    name = "github.com__spiffe__go-spiffe__v2__svid__x509svid",
    download = ":_github.com__spiffe__go-spiffe__v2#download",
    install = ["svid/x509svid"],
    module = "github.com/spiffe/go-spiffe/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__spiffe__go-spiffe__v2__bundle__x509bundle",
        ":github.com__spiffe__go-spiffe__v2__internal__pemutil",
        ":github.com__spiffe__go-spiffe__v2__internal__x509util",
        ":github.com__spiffe__go-spiffe__v2__spiffeid",
        ":github.com__zeebo__errs",
    ],
)

go_module(
    name = "github.com__spiffe__go-spiffe__v2__workloadapi",
    download = ":_github.com__spiffe__go-spiffe__v2#download",
    install = ["workloadapi"],
    module = "github.com/spiffe/go-spiffe/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__spiffe__go-spiffe__v2__bundle__jwtbundle",
        ":github.com__spiffe__go-spiffe__v2__bundle__spiffebundle",
        ":github.com__spiffe__go-spiffe__v2__bundle__x509bundle",
        ":github.com__spiffe__go-spiffe__v2__logger",
        ":github.com__spiffe__go-spiffe__v2__proto__spiffe__workload",
        ":github.com__spiffe__go-spiffe__v2__spiffeid",
        ":github.com__spiffe__go-spiffe__v2__svid__jwtsvid",
        ":github.com__spiffe__go-spiffe__v2__svid__x509svid",
        ":github.com__zeebo__errs",
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__credentials__insecure",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__status",
    ],
)

go_mod_download(
    name = "github.com__stoewer__go-strcase",
    _tag = "download",
    module = "github.com/stoewer/go-strcase",
    version = "v1.3.1",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__stoewer__go-strcase",
    download = ":_github.com__stoewer__go-strcase#download",
    install = ["."],
    module = "github.com/stoewer/go-strcase",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__stretchr__testify",
    _tag = "download",
    module = "github.com/stretchr/testify",
    version = "v1.11.1",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__stretchr__testify__assert",
    download = ":_github.com__stretchr__testify#download",
    install = ["assert"],
    module = "github.com/stretchr/testify",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__davecgh__go-spew__spew",
        ":github.com__pmezard__go-difflib__difflib",
        ":github.com__stretchr__testify__assert__yaml",
    ],
)

go_module(
    name = "github.com__stretchr__testify__assert__yaml",
    download = ":_github.com__stretchr__testify#download",
    install = ["assert/yaml"],
    module = "github.com/stretchr/testify",
    visibility = ["PUBLIC"],
    deps = [":gopkg.in__yaml.v3"],
)

go_module(
    name = "github.com__stretchr__testify__require",
    download = ":_github.com__stretchr__testify#download",
    install = ["require"],
    module = "github.com/stretchr/testify",
    visibility = ["PUBLIC"],
    deps = [":github.com__stretchr__testify__assert"],
)

go_mod_download(
    name = "github.com__xeipuuv__gojsonpointer",
    _tag = "download",
    module = "github.com/xeipuuv/gojsonpointer",
    version = "v0.0.0-20180127040702-4e3ac2762d5f",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__xeipuuv__gojsonpointer",
    download = ":_github.com__xeipuuv__gojsonpointer#download",
    install = ["."],
    module = "github.com/xeipuuv/gojsonpointer",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__xeipuuv__gojsonreference",
    _tag = "download",
    module = "github.com/xeipuuv/gojsonreference",
    version = "v0.0.0-20180127040603-bd5ef7bd5415",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__xeipuuv__gojsonreference",
    download = ":_github.com__xeipuuv__gojsonreference#download",
    install = ["."],
    module = "github.com/xeipuuv/gojsonreference",
    visibility = ["PUBLIC"],
    deps = [":github.com__xeipuuv__gojsonpointer"],
)

go_mod_download(
    name = "github.com__xeipuuv__gojsonschema",
    _tag = "download",
    module = "github.com/xeipuuv/gojsonschema",
    version = "v1.2.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__xeipuuv__gojsonschema",
    download = ":_github.com__xeipuuv__gojsonschema#download",
    install = ["."],
    module = "github.com/xeipuuv/gojsonschema",
    visibility = ["PUBLIC"],
    deps = [":github.com__xeipuuv__gojsonreference"],
)

go_mod_download(
    name = "github.com__zeebo__errs",
    _tag = "download",
    module = "github.com/zeebo/errs",
    version = "v1.4.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__zeebo__errs",
    download = ":_github.com__zeebo__errs#download",
    install = ["."],
    module = "github.com/zeebo/errs",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "go.einride.tech__aip",
    _tag = "download",
    module = "go.einride.tech/aip",
    version = "v0.73.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "go.einride.tech__aip__fieldmask",
    download = ":_go.einride.tech__aip#download",
    install = ["fieldmask"],
    module = "go.einride.tech/aip",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__types__known__fieldmaskpb",
    ],
)

go_mod_download(
    name = "go.yaml.in__yaml__v2",
    _tag = "download",
    module = "go.yaml.in/yaml/v2",
    version = "v2.4.2",
    visibility = ["PUBLIC"],
)

go_module(
    name = "go.yaml.in__yaml__v2",
    download = ":_go.yaml.in__yaml__v2#download",
    install = ["."],
    module = "go.yaml.in/yaml/v2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "golang.org__x__crypto",
    _tag = "download",
    module = "golang.org/x/crypto",
    version = "v0.41.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "golang.org__x__crypto__bcrypt",
    download = ":_golang.org__x__crypto#download",
    install = ["bcrypt"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__crypto__blowfish"],
)

go_module(
    name = "golang.org__x__crypto__blowfish",
    download = ":_golang.org__x__crypto#download",
    install = ["blowfish"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__crypto__pbkdf2",
    download = ":_golang.org__x__crypto#download",
    install = ["pbkdf2"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__crypto__scrypt",
    download = ":_golang.org__x__crypto#download",
    install = ["scrypt"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__crypto__pbkdf2"],
)

go_module(
    name = "golang.org__x__crypto__sha3",
    download = ":_golang.org__x__crypto#download",
    install = ["sha3"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__sys__cpu"],
)

go_mod_download(
    name = "golang.org__x__exp",
    _tag = "download",
    module = "golang.org/x/exp",
    version = "v0.0.0-20250620022241-b7579e27df2b",
    visibility = ["PUBLIC"],
)

go_module(
    name = "golang.org__x__exp__slices",
    download = ":_golang.org__x__exp#download",
    install = ["slices"],
    module = "golang.org/x/exp",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "golang.org__x__mod",
    _tag = "download",
    module = "golang.org/x/mod",
    version = "v0.26.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "golang.org__x__mod__internal__lazyregexp",
    download = ":_golang.org__x__mod#download",
    install = ["internal/lazyregexp"],
    module = "golang.org/x/mod",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__mod__modfile",
    download = ":_golang.org__x__mod#download",
    install = ["modfile"],
    module = "golang.org/x/mod",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__mod__internal__lazyregexp",
        ":golang.org__x__mod__module",
        ":golang.org__x__mod__semver",
    ],
)

go_module(
    name = "golang.org__x__mod__module",
    download = ":_golang.org__x__mod#download",
    install = ["module"],
    module = "golang.org/x/mod",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__mod__internal__lazyregexp",
        ":golang.org__x__mod__semver",
    ],
)

go_module(
    name = "golang.org__x__mod__semver",
    download = ":_golang.org__x__mod#download",
    install = ["semver"],
    module = "golang.org/x/mod",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "golang.org__x__net",
    _tag = "download",
    module = "golang.org/x/net",
    version = "v0.43.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "golang.org__x__net__context",
    download = ":_golang.org__x__net#download",
    install = ["context"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__net__http__httpguts",
    download = ":_golang.org__x__net#download",
    install = ["http/httpguts"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__net__idna"],
)

go_module(
    name = "golang.org__x__net__http2",
    download = ":_golang.org__x__net#download",
    install = ["http2"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__net__http2__hpack",
        ":golang.org__x__net__http__httpguts",
        ":golang.org__x__net__idna",
        ":golang.org__x__net__internal__httpcommon",
    ],
)

go_module(
    name = "golang.org__x__net__http2__hpack",
    download = ":_golang.org__x__net#download",
    install = ["http2/hpack"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__net__idna",
    download = ":_golang.org__x__net#download",
    install = ["idna"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__secure__bidirule",
        ":golang.org__x__text__unicode__bidi",
        ":golang.org__x__text__unicode__norm",
    ],
)

go_module(
    name = "golang.org__x__net__internal__httpcommon",
    download = ":_golang.org__x__net#download",
    install = ["internal/httpcommon"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__net__http2__hpack",
        ":golang.org__x__net__http__httpguts",
    ],
)

go_module(
    name = "golang.org__x__net__internal__timeseries",
    download = ":_golang.org__x__net#download",
    install = ["internal/timeseries"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__net__trace",
    download = ":_golang.org__x__net#download",
    install = ["trace"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__net__internal__timeseries"],
)

go_mod_download(
    name = "golang.org__x__sync",
    _tag = "download",
    module = "golang.org/x/sync",
    version = "v0.16.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "golang.org__x__sync__errgroup",
    download = ":_golang.org__x__sync#download",
    install = ["errgroup"],
    module = "golang.org/x/sync",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__sync__semaphore",
    download = ":_golang.org__x__sync#download",
    install = ["semaphore"],
    module = "golang.org/x/sync",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "golang.org__x__sys",
    _tag = "download",
    module = "golang.org/x/sys",
    version = "v0.35.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "golang.org__x__sys__cpu",
    download = ":_golang.org__x__sys#download",
    install = ["cpu"],
    module = "golang.org/x/sys",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__sys__unix",
    download = ":_golang.org__x__sys#download",
    install = ["unix"],
    module = "golang.org/x/sys",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "golang.org__x__text",
    _tag = "download",
    module = "golang.org/x/text",
    version = "v0.28.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "golang.org__x__text__cases",
    download = ":_golang.org__x__text#download",
    install = ["cases"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__internal",
        ":golang.org__x__text__language",
        ":golang.org__x__text__transform",
        ":golang.org__x__text__unicode__norm",
    ],
)

go_module(
    name = "golang.org__x__text__feature__plural",
    download = ":_golang.org__x__text#download",
    install = ["feature/plural"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__internal__catmsg",
        ":golang.org__x__text__internal__language__compact",
        ":golang.org__x__text__internal__number",
        ":golang.org__x__text__language",
        ":golang.org__x__text__message__catalog",
    ],
)

go_module(
    name = "golang.org__x__text__internal",
    download = ":_golang.org__x__text#download",
    install = ["internal"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text__language"],
)

go_module(
    name = "golang.org__x__text__internal__catmsg",
    download = ":_golang.org__x__text#download",
    install = ["internal/catmsg"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text__language"],
)

go_module(
    name = "golang.org__x__text__internal__format",
    download = ":_golang.org__x__text#download",
    install = ["internal/format"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text__language"],
)

go_module(
    name = "golang.org__x__text__internal__language",
    download = ":_golang.org__x__text#download",
    install = ["internal/language"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text__internal__tag"],
)

go_module(
    name = "golang.org__x__text__internal__language__compact",
    download = ":_golang.org__x__text#download",
    install = ["internal/language/compact"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text__internal__language"],
)

go_module(
    name = "golang.org__x__text__internal__number",
    download = ":_golang.org__x__text#download",
    install = ["internal/number"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__internal__language__compact",
        ":golang.org__x__text__internal__stringset",
        ":golang.org__x__text__language",
    ],
)

go_module(
    name = "golang.org__x__text__internal__stringset",
    download = ":_golang.org__x__text#download",
    install = ["internal/stringset"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__text__internal__tag",
    download = ":_golang.org__x__text#download",
    install = ["internal/tag"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__text__language",
    download = ":_golang.org__x__text#download",
    install = ["language"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__internal__language",
        ":golang.org__x__text__internal__language__compact",
    ],
)

go_module(
    name = "golang.org__x__text__message",
    download = ":_golang.org__x__text#download",
    install = ["message"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__feature__plural",
        ":golang.org__x__text__internal__format",
        ":golang.org__x__text__internal__number",
        ":golang.org__x__text__language",
        ":golang.org__x__text__message__catalog",
    ],
)

go_module(
    name = "golang.org__x__text__message__catalog",
    download = ":_golang.org__x__text#download",
    install = ["message/catalog"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__internal",
        ":golang.org__x__text__internal__catmsg",
        ":golang.org__x__text__language",
    ],
)

go_module(
    name = "golang.org__x__text__runes",
    download = ":_golang.org__x__text#download",
    install = ["runes"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text__transform"],
)

go_module(
    name = "golang.org__x__text__secure__bidirule",
    download = ":_golang.org__x__text#download",
    install = ["secure/bidirule"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__transform",
        ":golang.org__x__text__unicode__bidi",
    ],
)

go_module(
    name = "golang.org__x__text__secure__precis",
    download = ":_golang.org__x__text#download",
    install = ["secure/precis"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__cases",
        ":golang.org__x__text__language",
        ":golang.org__x__text__runes",
        ":golang.org__x__text__secure__bidirule",
        ":golang.org__x__text__transform",
        ":golang.org__x__text__unicode__norm",
        ":golang.org__x__text__width",
    ],
)

go_module(
    name = "golang.org__x__text__transform",
    download = ":_golang.org__x__text#download",
    install = ["transform"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__text__unicode__bidi",
    download = ":_golang.org__x__text#download",
    install = ["unicode/bidi"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__text__unicode__norm",
    download = ":_golang.org__x__text#download",
    install = ["unicode/norm"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text__transform"],
)

go_module(
    name = "golang.org__x__text__width",
    download = ":_golang.org__x__text#download",
    install = ["width"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text__transform"],
)

go_mod_download(
    name = "google.golang.org__genproto",
    _tag = "download",
    module = "google.golang.org/genproto",
    version = "v0.0.0-20240711142825-46eb208f015d",
    visibility = ["PUBLIC"],
)

go_module(
    name = "google.golang.org__genproto__googleapis__logging__type",
    download = ":_google.golang.org__genproto#download",
    install = ["googleapis/logging/type"],
    module = "google.golang.org/genproto",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__durationpb",
    ],
)

go_module(
    name = "google.golang.org__genproto__protobuf__field_mask",
    download = ":_google.golang.org__genproto#download",
    install = ["protobuf/field_mask"],
    module = "google.golang.org/genproto",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__types__known__fieldmaskpb"],
)

go_mod_download(
    name = "google.golang.org__genproto__googleapis__api",
    _tag = "download",
    module = "google.golang.org/genproto/googleapis/api",
    version = "v0.0.0-20250603155806-513f23925822",
    visibility = ["PUBLIC"],
)

go_module(
    name = "google.golang.org__genproto__googleapis__api",
    download = ":_google.golang.org__genproto__googleapis__api#download",
    install = ["."],
    module = "google.golang.org/genproto/googleapis/api",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__genproto__googleapis__api__annotations",
    download = ":_google.golang.org__genproto__googleapis__api#download",
    install = ["annotations"],
    module = "google.golang.org/genproto/googleapis/api",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__genproto__googleapis__api",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__descriptorpb",
        ":google.golang.org__protobuf__types__known__durationpb",
    ],
)

go_module(
    name = "google.golang.org__genproto__googleapis__api__expr__v1alpha1",
    download = ":_google.golang.org__genproto__googleapis__api#download",
    install = ["expr/v1alpha1"],
    module = "google.golang.org/genproto/googleapis/api",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__genproto__googleapis__rpc__status",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__anypb",
        ":google.golang.org__protobuf__types__known__durationpb",
        ":google.golang.org__protobuf__types__known__emptypb",
        ":google.golang.org__protobuf__types__known__structpb",
        ":google.golang.org__protobuf__types__known__timestamppb",
    ],
)

go_module(
    name = "google.golang.org__genproto__googleapis__api__httpbody",
    download = ":_google.golang.org__genproto__googleapis__api#download",
    install = ["httpbody"],
    module = "google.golang.org/genproto/googleapis/api",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__anypb",
    ],
)

go_mod_download(
    name = "google.golang.org__genproto__googleapis__rpc",
    _tag = "download",
    module = "google.golang.org/genproto/googleapis/rpc",
    version = "v0.0.0-20250603155806-513f23925822",
    visibility = ["PUBLIC"],
)

go_module(
    name = "google.golang.org__genproto__googleapis__rpc__errdetails",
    download = ":_google.golang.org__genproto__googleapis__rpc#download",
    install = ["errdetails"],
    module = "google.golang.org/genproto/googleapis/rpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__durationpb",
    ],
)

go_module(
    name = "google.golang.org__genproto__googleapis__rpc__status",
    download = ":_google.golang.org__genproto__googleapis__rpc#download",
    install = ["status"],
    module = "google.golang.org/genproto/googleapis/rpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__anypb",
    ],
)

go_mod_download(
    name = "google.golang.org__grpc",
    _tag = "download",
    module = "google.golang.org/grpc",
    version = "v1.73.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "google.golang.org__grpc",
    download = ":_google.golang.org__grpc#download",
    install = ["."],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__net__trace",
        ":google.golang.org__grpc__backoff",
        ":google.golang.org__grpc__balancer",
        ":google.golang.org__grpc__balancer__base",
        ":google.golang.org__grpc__balancer__pickfirst",
        ":google.golang.org__grpc__balancer__roundrobin",
        ":google.golang.org__grpc__channelz",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__credentials__insecure",
        ":google.golang.org__grpc__encoding",
        ":google.golang.org__grpc__encoding__proto",
        ":google.golang.org__grpc__experimental__stats",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal",
        ":google.golang.org__grpc__internal__backoff",
        ":google.golang.org__grpc__internal__balancer__gracefulswitch",
        ":google.golang.org__grpc__internal__balancerload",
        ":google.golang.org__grpc__internal__binarylog",
        ":google.golang.org__grpc__internal__channelz",
        ":google.golang.org__grpc__internal__grpcsync",
        ":google.golang.org__grpc__internal__grpcutil",
        ":google.golang.org__grpc__internal__idle",
        ":google.golang.org__grpc__internal__metadata",
        ":google.golang.org__grpc__internal__pretty",
        ":google.golang.org__grpc__internal__resolver",
        ":google.golang.org__grpc__internal__resolver__delegatingresolver",
        ":google.golang.org__grpc__internal__resolver__passthrough",
        ":google.golang.org__grpc__internal__resolver__unix",
        ":google.golang.org__grpc__internal__serviceconfig",
        ":google.golang.org__grpc__internal__stats",
        ":google.golang.org__grpc__internal__status",
        ":google.golang.org__grpc__internal__transport",
        ":google.golang.org__grpc__keepalive",
        ":google.golang.org__grpc__mem",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__peer",
        ":google.golang.org__grpc__resolver",
        ":google.golang.org__grpc__resolver__dns",
        ":google.golang.org__grpc__serviceconfig",
        ":google.golang.org__grpc__stats",
        ":google.golang.org__grpc__status",
        ":google.golang.org__grpc__tap",
    ],
)

go_module(
    name = "google.golang.org__grpc__attributes",
    download = ":_google.golang.org__grpc#download",
    install = ["attributes"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__backoff",
    download = ":_google.golang.org__grpc#download",
    install = ["backoff"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__balancer",
    download = ":_google.golang.org__grpc#download",
    install = ["balancer"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__channelz",
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__experimental__stats",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__resolver",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__balancer__base",
    download = ":_google.golang.org__grpc#download",
    install = ["balancer/base"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__balancer",
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__resolver",
    ],
)

go_module(
    name = "google.golang.org__grpc__balancer__endpointsharding",
    download = ":_google.golang.org__grpc#download",
    install = ["balancer/endpointsharding"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__balancer",
        ":google.golang.org__grpc__balancer__base",
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__resolver",
    ],
)

go_module(
    name = "google.golang.org__grpc__balancer__grpclb__state",
    download = ":_google.golang.org__grpc#download",
    install = ["balancer/grpclb/state"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__resolver"],
)

go_module(
    name = "google.golang.org__grpc__balancer__pickfirst",
    download = ":_google.golang.org__grpc#download",
    install = ["balancer/pickfirst"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__balancer",
        ":google.golang.org__grpc__balancer__pickfirst__internal",
        ":google.golang.org__grpc__balancer__pickfirst__pickfirstleaf",
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal__envconfig",
        ":google.golang.org__grpc__internal__grpclog",
        ":google.golang.org__grpc__internal__pretty",
        ":google.golang.org__grpc__resolver",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__balancer__pickfirst__internal",
    download = ":_google.golang.org__grpc#download",
    install = ["balancer/pickfirst/internal"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__balancer__pickfirst__pickfirstleaf",
    download = ":_google.golang.org__grpc#download",
    install = ["balancer/pickfirst/pickfirstleaf"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__balancer",
        ":google.golang.org__grpc__balancer__pickfirst__internal",
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__experimental__stats",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal__envconfig",
        ":google.golang.org__grpc__internal__grpclog",
        ":google.golang.org__grpc__internal__pretty",
        ":google.golang.org__grpc__resolver",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__balancer__roundrobin",
    download = ":_google.golang.org__grpc#download",
    install = ["balancer/roundrobin"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__balancer",
        ":google.golang.org__grpc__balancer__endpointsharding",
        ":google.golang.org__grpc__balancer__pickfirst__pickfirstleaf",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal__grpclog",
    ],
)

go_module(
    name = "google.golang.org__grpc__binarylog__grpc_binarylog_v1",
    download = ":_google.golang.org__grpc#download",
    install = ["binarylog/grpc_binarylog_v1"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__durationpb",
        ":google.golang.org__protobuf__types__known__timestamppb",
    ],
)

go_module(
    name = "google.golang.org__grpc__channelz",
    download = ":_google.golang.org__grpc#download",
    install = ["channelz"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__internal__channelz"],
)

go_module(
    name = "google.golang.org__grpc__codes",
    download = ":_google.golang.org__grpc#download",
    install = ["codes"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__internal"],
)

go_module(
    name = "google.golang.org__grpc__connectivity",
    download = ":_google.golang.org__grpc#download",
    install = ["connectivity"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__grpclog"],
)

go_module(
    name = "google.golang.org__grpc__credentials",
    download = ":_google.golang.org__grpc#download",
    install = ["credentials"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__attributes",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal__credentials",
        ":google.golang.org__grpc__internal__envconfig",
        ":google.golang.org__protobuf__proto",
    ],
)

go_module(
    name = "google.golang.org__grpc__credentials__insecure",
    download = ":_google.golang.org__grpc#download",
    install = ["credentials/insecure"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__credentials"],
)

go_module(
    name = "google.golang.org__grpc__encoding",
    download = ":_google.golang.org__grpc#download",
    install = ["encoding"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__internal__grpcutil",
        ":google.golang.org__grpc__mem",
    ],
)

go_module(
    name = "google.golang.org__grpc__encoding__gzip",
    download = ":_google.golang.org__grpc#download",
    install = ["encoding/gzip"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__encoding"],
)

go_module(
    name = "google.golang.org__grpc__encoding__proto",
    download = ":_google.golang.org__grpc#download",
    install = ["encoding/proto"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__encoding",
        ":google.golang.org__grpc__mem",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__protoadapt",
    ],
)

go_module(
    name = "google.golang.org__grpc__experimental__stats",
    download = ":_google.golang.org__grpc#download",
    install = ["experimental/stats"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal",
        ":google.golang.org__grpc__stats",
    ],
)

go_module(
    name = "google.golang.org__grpc__grpclog",
    download = ":_google.golang.org__grpc#download",
    install = ["grpclog"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__grpclog__internal"],
)

go_module(
    name = "google.golang.org__grpc__grpclog__internal",
    download = ":_google.golang.org__grpc#download",
    install = ["grpclog/internal"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__health__grpc_health_v1",
    download = ":_google.golang.org__grpc#download",
    install = ["health/grpc_health_v1"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__status",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal",
    download = ":_google.golang.org__grpc#download",
    install = ["internal"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__sys__unix",
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__backoff",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/backoff"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__backoff"],
)

go_module(
    name = "google.golang.org__grpc__internal__balancer__gracefulswitch",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/balancer/gracefulswitch"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__balancer",
        ":google.golang.org__grpc__balancer__base",
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__resolver",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__balancerload",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/balancerload"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__metadata"],
)

go_module(
    name = "google.golang.org__grpc__internal__binarylog",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/binarylog"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__binarylog__grpc_binarylog_v1",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal__grpcutil",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__status",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__types__known__durationpb",
        ":google.golang.org__protobuf__types__known__timestamppb",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__buffer",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/buffer"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__internal__channelz",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/channelz"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal",
    ] + select({
        ":__config_darwin_amd64": [],
        ":__config_darwin_arm64": [],
        ":__config_linux_amd64": [":golang.org__x__sys__unix"],
        ":__config_linux_arm64": [":golang.org__x__sys__unix"],
        "default": [],
    }),
)

go_module(
    name = "google.golang.org__grpc__internal__credentials",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/credentials"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__grpclog"],
)

go_module(
    name = "google.golang.org__grpc__internal__envconfig",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/envconfig"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__internal__grpclog",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/grpclog"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__grpclog"],
)

go_module(
    name = "google.golang.org__grpc__internal__grpcsync",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/grpcsync"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__internal__buffer"],
)

go_module(
    name = "google.golang.org__grpc__internal__grpcutil",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/grpcutil"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__metadata"],
)

go_module(
    name = "google.golang.org__grpc__internal__idle",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/idle"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__internal__metadata",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/metadata"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__resolver",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__pretty",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/pretty"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protojson",
        ":google.golang.org__protobuf__protoadapt",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__proxyattributes",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/proxyattributes"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__resolver"],
)

go_module(
    name = "google.golang.org__grpc__internal__resolver",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/resolver"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__internal__serviceconfig",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__resolver",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__resolver__delegatingresolver",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/resolver/delegatingresolver"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal__proxyattributes",
        ":google.golang.org__grpc__internal__transport",
        ":google.golang.org__grpc__internal__transport__networktype",
        ":google.golang.org__grpc__resolver",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__resolver__dns",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/resolver/dns"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__balancer__grpclb__state",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal__backoff",
        ":google.golang.org__grpc__internal__envconfig",
        ":google.golang.org__grpc__internal__resolver__dns__internal",
        ":google.golang.org__grpc__resolver",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__resolver__dns__internal",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/resolver/dns/internal"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__internal__resolver__passthrough",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/resolver/passthrough"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__resolver"],
)

go_module(
    name = "google.golang.org__grpc__internal__resolver__unix",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/resolver/unix"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__internal__transport__networktype",
        ":google.golang.org__grpc__resolver",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__serviceconfig",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/serviceconfig"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__balancer",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__stats",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/stats"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__experimental__stats",
        ":google.golang.org__grpc__stats",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__status",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/status"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__genproto__googleapis__rpc__status",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__protoadapt",
        ":google.golang.org__protobuf__types__known__anypb",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__syscall",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/syscall"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__grpclog"] + select({
        ":__config_darwin_amd64": [],
        ":__config_darwin_arm64": [],
        ":__config_linux_amd64": [":golang.org__x__sys__unix"],
        ":__config_linux_arm64": [":golang.org__x__sys__unix"],
        "default": [],
    }),
)

go_module(
    name = "google.golang.org__grpc__internal__transport",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/transport"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__net__http2",
        ":golang.org__x__net__http2__hpack",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal",
        ":google.golang.org__grpc__internal__channelz",
        ":google.golang.org__grpc__internal__credentials",
        ":google.golang.org__grpc__internal__grpclog",
        ":google.golang.org__grpc__internal__grpcsync",
        ":google.golang.org__grpc__internal__grpcutil",
        ":google.golang.org__grpc__internal__metadata",
        ":google.golang.org__grpc__internal__pretty",
        ":google.golang.org__grpc__internal__proxyattributes",
        ":google.golang.org__grpc__internal__status",
        ":google.golang.org__grpc__internal__syscall",
        ":google.golang.org__grpc__internal__transport__networktype",
        ":google.golang.org__grpc__keepalive",
        ":google.golang.org__grpc__mem",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__peer",
        ":google.golang.org__grpc__resolver",
        ":google.golang.org__grpc__stats",
        ":google.golang.org__grpc__status",
        ":google.golang.org__grpc__tap",
        ":google.golang.org__protobuf__proto",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__transport__networktype",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/transport/networktype"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__resolver"],
)

go_module(
    name = "google.golang.org__grpc__keepalive",
    download = ":_google.golang.org__grpc#download",
    install = ["keepalive"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__mem",
    download = ":_google.golang.org__grpc#download",
    install = ["mem"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__internal"],
)

go_module(
    name = "google.golang.org__grpc__metadata",
    download = ":_google.golang.org__grpc#download",
    install = ["metadata"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__internal"],
)

go_module(
    name = "google.golang.org__grpc__peer",
    download = ":_google.golang.org__grpc#download",
    install = ["peer"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__credentials"],
)

go_module(
    name = "google.golang.org__grpc__reflection",
    download = ":_google.golang.org__grpc#download",
    install = ["reflection"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__reflection__grpc_reflection_v1",
        ":google.golang.org__grpc__reflection__grpc_reflection_v1alpha",
        ":google.golang.org__grpc__reflection__internal",
        ":google.golang.org__protobuf__reflect__protodesc",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "google.golang.org__grpc__reflection__grpc_reflection_v1",
    download = ":_google.golang.org__grpc#download",
    install = ["reflection/grpc_reflection_v1"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__status",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__grpc__reflection__grpc_reflection_v1alpha",
    download = ":_google.golang.org__grpc#download",
    install = ["reflection/grpc_reflection_v1alpha"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__status",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__grpc__reflection__internal",
    download = ":_google.golang.org__grpc#download",
    install = ["reflection/internal"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__reflection__grpc_reflection_v1",
        ":google.golang.org__grpc__reflection__grpc_reflection_v1alpha",
        ":google.golang.org__grpc__status",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protodesc",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "google.golang.org__grpc__resolver",
    download = ":_google.golang.org__grpc#download",
    install = ["resolver"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__attributes",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__experimental__stats",
        ":google.golang.org__grpc__internal",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__resolver__dns",
    download = ":_google.golang.org__grpc#download",
    install = ["resolver/dns"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__internal__resolver__dns",
        ":google.golang.org__grpc__resolver",
    ],
)

go_module(
    name = "google.golang.org__grpc__serviceconfig",
    download = ":_google.golang.org__grpc#download",
    install = ["serviceconfig"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__stats",
    download = ":_google.golang.org__grpc#download",
    install = ["stats"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__metadata"],
)

go_module(
    name = "google.golang.org__grpc__status",
    download = ":_google.golang.org__grpc#download",
    install = ["status"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__genproto__googleapis__rpc__status",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__internal__status",
    ],
)

go_module(
    name = "google.golang.org__grpc__tap",
    download = ":_google.golang.org__grpc#download",
    install = ["tap"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__metadata"],
)

go_mod_download(
    name = "google.golang.org__protobuf",
    _tag = "download",
    module = "google.golang.org/protobuf",
    version = "v1.36.9",
    visibility = ["PUBLIC"],
)

go_module(
    name = "google.golang.org__protobuf__compiler__protogen",
    download = ":_google.golang.org__protobuf#download",
    install = ["compiler/protogen"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__prototext",
        ":google.golang.org__protobuf__internal__filedesc",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protodesc",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__types__descriptorpb",
        ":google.golang.org__protobuf__types__dynamicpb",
        ":google.golang.org__protobuf__types__gofeaturespb",
        ":google.golang.org__protobuf__types__pluginpb",
    ],
)

go_module(
    name = "google.golang.org__protobuf__encoding__protodelim",
    download = ":_google.golang.org__protobuf#download",
    install = ["encoding/protodelim"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__proto",
    ],
)

go_module(
    name = "google.golang.org__protobuf__encoding__protojson",
    download = ":_google.golang.org__protobuf#download",
    install = ["encoding/protojson"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__encoding__json",
        ":google.golang.org__protobuf__internal__encoding__messageset",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__filedesc",
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__order",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__internal__set",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "google.golang.org__protobuf__encoding__prototext",
    download = ":_google.golang.org__protobuf#download",
    install = ["encoding/prototext"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__encoding__messageset",
        ":google.golang.org__protobuf__internal__encoding__text",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__order",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__internal__set",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "google.golang.org__protobuf__encoding__protowire",
    download = ":_google.golang.org__protobuf#download",
    install = ["encoding/protowire"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__internal__errors"],
)

go_module(
    name = "google.golang.org__protobuf__internal__descfmt",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/descfmt"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__detrand",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__descopts",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/descopts"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__reflect__protoreflect"],
)

go_module(
    name = "google.golang.org__protobuf__internal__detrand",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/detrand"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__protobuf__internal__editiondefaults",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/editiondefaults"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__protobuf__internal__editionssupport",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/editionssupport"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__types__descriptorpb"],
)

go_module(
    name = "google.golang.org__protobuf__internal__encoding__defval",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/encoding/defval"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__encoding__text",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__encoding__json",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/encoding/json"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__detrand",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__strs",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__encoding__messageset",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/encoding/messageset"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__encoding__tag",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/encoding/tag"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__encoding__defval",
        ":google.golang.org__protobuf__internal__filedesc",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__encoding__text",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/encoding/text"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__detrand",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__internal__strs",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__errors",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/errors"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__internal__detrand"],
)

go_module(
    name = "google.golang.org__protobuf__internal__filedesc",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/filedesc"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__descfmt",
        ":google.golang.org__protobuf__internal__descopts",
        ":google.golang.org__protobuf__internal__editiondefaults",
        ":google.golang.org__protobuf__internal__encoding__defval",
        ":google.golang.org__protobuf__internal__encoding__messageset",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__filetype",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/filetype"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__descopts",
        ":google.golang.org__protobuf__internal__filedesc",
        ":google.golang.org__protobuf__internal__impl",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__flags",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/flags"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__protobuf__internal__genid",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/genid"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__reflect__protoreflect"],
)

go_module(
    name = "google.golang.org__protobuf__internal__impl",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/impl"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__prototext",
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__descopts",
        ":google.golang.org__protobuf__internal__detrand",
        ":google.golang.org__protobuf__internal__encoding__messageset",
        ":google.golang.org__protobuf__internal__encoding__tag",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__filedesc",
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__order",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__internal__protolazy",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__runtime__protoiface",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__msgfmt",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/msgfmt"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__detrand",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__order",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__order",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/order"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__reflect__protoreflect"],
)

go_module(
    name = "google.golang.org__protobuf__internal__pragma",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/pragma"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__protobuf__internal__protolazy",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/protolazy"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__runtime__protoiface",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__set",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/set"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__protobuf__internal__strs",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/strs"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__version",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/version"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__protobuf__proto",
    download = ":_google.golang.org__protobuf#download",
    install = ["proto"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__encoding__messageset",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__order",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__runtime__protoiface",
    ],
)

go_module(
    name = "google.golang.org__protobuf__protoadapt",
    download = ":_google.golang.org__protobuf#download",
    install = ["protoadapt"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__runtime__protoiface",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__protobuf__reflect__protodesc",
    download = ":_google.golang.org__protobuf#download",
    install = ["reflect/protodesc"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__editiondefaults",
        ":google.golang.org__protobuf__internal__editionssupport",
        ":google.golang.org__protobuf__internal__encoding__defval",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__filedesc",
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__types__descriptorpb",
        ":google.golang.org__protobuf__types__gofeaturespb",
    ],
)

go_module(
    name = "google.golang.org__protobuf__reflect__protoreflect",
    download = ":_google.golang.org__protobuf#download",
    install = ["reflect/protoreflect"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__pragma",
    ],
)

go_module(
    name = "google.golang.org__protobuf__reflect__protoregistry",
    download = ":_google.golang.org__protobuf#download",
    install = ["reflect/protoregistry"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__encoding__messageset",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__runtime__protoiface",
    download = ":_google.golang.org__protobuf#download",
    install = ["runtime/protoiface"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__runtime__protoimpl",
    download = ":_google.golang.org__protobuf#download",
    install = ["runtime/protoimpl"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__filedesc",
        ":google.golang.org__protobuf__internal__filetype",
        ":google.golang.org__protobuf__internal__impl",
        ":google.golang.org__protobuf__internal__protolazy",
        ":google.golang.org__protobuf__internal__version",
    ],
)

go_module(
    name = "google.golang.org__protobuf__testing__protocmp",
    download = ":_google.golang.org__protobuf#download",
    install = ["testing/protocmp"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__go-cmp__cmp",
        ":github.com__google__go-cmp__cmp__cmpopts",
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__msgfmt",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__runtime__protoiface",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__descriptorpb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/descriptorpb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__dynamicpb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/dynamicpb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__runtime__protoiface",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__gofeaturespb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/gofeaturespb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__descriptorpb",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__known__anypb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/known/anypb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__known__durationpb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/known/durationpb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__known__emptypb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/known/emptypb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__known__fieldmaskpb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/known/fieldmaskpb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__known__structpb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/known/structpb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protojson",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__known__timestamppb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/known/timestamppb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__known__wrapperspb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/known/wrapperspb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__pluginpb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/pluginpb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__descriptorpb",
    ],
)

go_mod_download(
    name = "gopkg.in__warnings.v0",
    _tag = "download",
    module = "gopkg.in/warnings.v0",
    version = "v0.1.2",
    visibility = ["PUBLIC"],
)

go_module(
    name = "gopkg.in__warnings.v0",
    download = ":_gopkg.in__warnings.v0#download",
    install = ["."],
    module = "gopkg.in/warnings.v0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "gopkg.in__yaml.v2",
    _tag = "download",
    module = "gopkg.in/yaml.v2",
    version = "v2.3.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "gopkg.in__yaml.v2",
    download = ":_gopkg.in__yaml.v2#download",
    install = ["."],
    module = "gopkg.in/yaml.v2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "gopkg.in__yaml.v3",
    _tag = "download",
    module = "gopkg.in/yaml.v3",
    version = "v3.0.1",
    visibility = ["PUBLIC"],
)

go_module(
    name = "gopkg.in__yaml.v3",
    download = ":_gopkg.in__yaml.v3#download",
    install = ["."],
    module = "gopkg.in/yaml.v3",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "sigs.k8s.io__yaml",
    _tag = "download",
    module = "sigs.k8s.io/yaml",
    version = "v1.4.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "sigs.k8s.io__yaml",
    download = ":_sigs.k8s.io__yaml#download",
    install = ["."],
    module = "sigs.k8s.io/yaml",
    visibility = ["PUBLIC"],
    deps = [":sigs.k8s.io__yaml__goyaml.v2"],
)

go_module(
    name = "sigs.k8s.io__yaml__goyaml.v2",
    download = ":_sigs.k8s.io__yaml#download",
    install = ["goyaml.v2"],
    module = "sigs.k8s.io/yaml",
    visibility = ["PUBLIC"],
    deps = [],
)
